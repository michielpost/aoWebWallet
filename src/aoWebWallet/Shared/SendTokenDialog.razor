@using aoWebWallet.Models
@using aoWebWallet.Shared
@inherits MvvmComponentBase<MainViewModel>
@inject TokenClient TokenClient
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
       Send Tokens
   
       <MudStack Row=true>
            <MudAvatar Image="@UrlHelper.GetArweaveUrl(BindingContext.SelectedToken?.TokenData?.Logo)" Size="Size.Large" />
            <MudStack Justify="Justify.Center" Spacing="0">
                <MudText Typo="Typo.body1">@BindingContext.SelectedToken?.TokenData?.Name</MudText>
                <MudText Typo="Typo.body2">@BindingContext.SelectedToken?.TokenData?.Ticker</MudText>
                <MudText Typo="Typo.subtitle1">@BindingContext.SelectedToken?.TokenId</MudText>
            </MudStack>
       </MudStack>
        <MudTextField @bind-Value="Address" MaxLength=43 Label="Wallet Address" Variant="Variant.Text"></MudTextField>
        <MudTextField @bind-Value="Amount" Label="Amount" Variant="Variant.Text" Format="F1"></MudTextField>
        <MudText Color="Color.Secondary">@Progress</MudText>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;

    public string? Progress { get; set; }
    public string? Address { get; set; }
    public decimal Amount { get; set; }

    public async Task Submit()
    {
        if(string.IsNullOrEmpty(Address))
            return;

        if (string.IsNullOrEmpty(BindingContext.SelectedToken?.TokenId)
        || BindingContext.SelectedToken.TokenData?.Denomination == null
        || !BindingContext.SelectedToken.TokenData.Denomination.HasValue)
            return;

        long amountLong = BalanceHelper.DecimalToTokenAmount(Amount, BindingContext.SelectedToken.TokenData.Denomination.Value);
        var result = BindingContext.SendTokenWithArConnect(BindingContext.SelectedToken.TokenId, Address, amountLong);
        MudDialog.Close(DialogResult.Ok(true));
    }

    //void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
}