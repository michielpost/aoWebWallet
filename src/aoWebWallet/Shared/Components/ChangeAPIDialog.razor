@inject MainViewModel MainViewModel

<MudDialog>
    <DialogContent>
        <MudPaper Class="pa-4">
            <MudSelect @bind-Value="newUrl" T="string" Label="Select API Url" AnchorOrigin="Origin.BottomCenter" FullWidth="true">
                
            </MudSelect>
        </MudPaper>

        <MudPaper Class="pa-4">
            <MudTextField T="string" @bind-Value="customUrl" Label="Custom URL" InputType="InputType.Url" />
        </MudPaper>

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="MudBlazor.Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] 
    MudDialogInstance? MudDialog { get; set; }

    private string? newUrl { get; set; }
    private string? customUrl { get; set; }

    protected override void OnInitialized()
    {
        newUrl = MainViewModel.ComputeUnitUrl;
        base.OnInitialized();
    }

    void Submit() {
        if(!string.IsNullOrEmpty(newUrl))
            MainViewModel.ComputeUnitUrl = newUrl;
        if (!string.IsNullOrEmpty(customUrl))
            MainViewModel.ComputeUnitUrl = customUrl;

        MudDialog?.Close(DialogResult.Ok(true));
    }

    void Cancel() => MudDialog?.Cancel();
}