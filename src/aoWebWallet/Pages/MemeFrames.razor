@page "/meme-frames"
@using aoWebWallet.Models
@using aoww.ProcesModels
@using aoww.ProcesModels.Metadata
@inherits MvvmComponentBase<MainViewModel>
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject StorageService StorageService
@inject TransactionService TransactionService
@inject GatewayUrlHelper UrlHelper


<PageTitle>@Program.PageTitlePostFix</PageTitle>


<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <MudText Class="mb-4" Typo="Typo.h5">Meme Frames</MudText>

    <SelectActiveWalletComponent />

    <MudGrid Spacing="2" Justify="Justify.Center">

        @foreach (var memeProcess in memeList)
        {
            var readActions = memeProcess.GetDryRunActions();
            var messageActions = memeProcess.GetMessageActions();

            <MudItem xs="12" sm="4">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderAvatar>
                            @if (!string.IsNullOrEmpty(memeProcess.Logo))
                            {
                                <MudAvatar Class="mr-3" Image="@UrlHelper.GetArweaveUrl(memeProcess.Logo)" Size="Size.Large" />
                            }
                            else
                            {
                                <MudAvatar Color="Color.Secondary">@memeProcess.ProcessId</MudAvatar>
                            }
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <MudText Typo="Typo.body1">Id: @memeProcess.ProcessId</MudText>
                            <MudText Typo="Typo.body1">Name: @memeProcess.Name</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent Class="pb-0">
                       @*  <MudProgressLinear Color="Color.Info" Size="Size.Large" Value="25" Class="mb-2">
                            <MudText Typo="Typo.subtitle1" Color="Color.Secondary">
                                <b>25%</b>
                            </MudText>
                        </MudProgressLinear> *@
                       @*  <MudText Class="mb-2" Typo="Typo.body2">
                            Theme: The zeroth memecoin minted on ao: winner of hackathon prizes, poet of iframes, informer of votes, verifier of processes, pilgrim of the hyper parallel spaces between, believer in dreams, drafter of the dankest memes.
                        </MudText>
                        <MudTextField Class="mt-0" T="string" Label="Amount" HelperText="The amount to perform below action" HelperTextOnFocus="true" Variant="Variant.Text" /> *@
                    </MudCardContent>

                    @if (readActions.Any())
                    {
                        <MudCardActions>
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                                @foreach (var action in readActions)
                                {
                                    <MudButton OnClick="() => DryRun(action)">@action.Name</MudButton>
                                }
                        </MudButtonGroup>
                        </MudCardActions>
                    }

                    @if (messageActions.Any())
                    {
                        <MudCardActions>
                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Filled">
                                @foreach (var action in messageActions)
                                {
                                    <MudButton OnClick="() => GoToSend(action.AoAction)">@action.Name</MudButton>
                                }
                            </MudButtonGroup>
                        </MudCardActions>
                    }

                    <MudCardActions>
                        <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" />
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }

        
    </MudGrid>
</MudContainer>

@code
{
    private List<MemeFrameProcess> memeList = new();

    protected override void OnInitialized()
    {
        //WatchCollection(dataService.TokenList);
        //WatchObject(dataService.TokenDataLoader);

        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            memeList = await StorageService.GetMemeFrames();

            foreach(var meme in memeList)
            {
                var initActions = meme.GetAutoRunActions();

                foreach(var initAction in initActions)
                {
                    DryRun(initAction);
                }
            }

            StateHasChanged();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task DryRun(ActionMetadata actionMetadata)
    {
        AoAction aoAction = actionMetadata.AoAction;

        var senderAddress = BindingContext.ActiveWalletAddress;
        if (senderAddress == null)
            senderAddress = aoAction.Target?.Value ?? string.Empty;

        var testWallet = new Wallet() { Address = senderAddress };
        var result = await TransactionService.DryRunAction(testWallet, aoAction);

        actionMetadata?.ProcessResult?.Invoke(result);

        StateHasChanged();
    }

    private void GoToSend(AoAction aoAction)
    {
        NavigationManager.NavigateTo($"/action?{aoAction.ToQueryString()}");
    }

}
