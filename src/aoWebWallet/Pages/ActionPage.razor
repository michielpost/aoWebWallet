@page "/action"
@using aoWebWallet.Models
@inherits MvvmComponentBase<MainViewModel>
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject TokenDataService dataService

<PageTitle>@Program.PageTitlePostFix</PageTitle>


<MudContainer Class="mt-16 px-8" MaxWidth="MaxWidth.False">
    <MudText Typo="Typo.h5">Action Page</MudText>

    <MudStack>
        TODO: Select a wallet, or create a new wallet

        @if (BindingContext.WalletList.Data != null)
        {
            if (!BindingContext.WalletList.Data.Any())
            {
                <MudButton aria-label="add wallet" Size="Size.Large" OnClick="OpenDialog">Add Wallet</MudButton>
            }
            else
            {
                <MudSelect @bind-Value="@selectedWallet" Label="Select a wallet" Variant="Variant.Outlined" MaxHeight="250" ReadOnly="@readOnly">
                    @foreach (var wallet in BindingContext.WalletList.Data ?? new())
                    {
                        <MudSelectItem Value="@wallet.Address">
                            <MudStack Row="true">
                                @* <MudAvatar Image="@logoUrl" Size="Size.Large" Class="rounded-full" /> *@
                                <MudStack style="overflow: hidden;" Justify="Justify.Center" Spacing="0">
                                    <div style="display:flex; white-space: nowrap;">
                                        <MudText Class="KodeMono" style="text-overflow: ellipsis; white-space: nowrap;overflow: hidden;" Typo="Typo.h6">
                                            @wallet.Address
                                        </MudText>
                                    </div>
                                    <div style="display:flex; flex-direction:row;">
                                        <MudText Typo="Typo.body2">@wallet.Name</MudText>
                                    </div>
                                </MudStack>
                            </MudStack>

                        </MudSelectItem>
                    }
                </MudSelect>
            }
        }

    </MudStack>

    @if(readOnly)
    {
        <MudText>Please review your transaction:</MudText>
    }

    <ActionEditor AoAction="@AoAction" ReadOnly="@readOnly" Address="@selectedWallet" />

    @if (!readOnly)
    {
        <MudButton OnClick="Preview">Preview</MudButton>
    }
    else
    {
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton OnClick="Submit">Submit</MudButton>
    }


</MudContainer>

@code
{
    private string? selectedWallet;
    private bool readOnly = false;

    private void Preview()
    {
        readOnly = true;
    }
    private void Cancel()
    {
        readOnly = false;
    }

    private async Task Submit()
    {
        if (BindingContext.WalletList.Data == null)
            return;

        var wallet = BindingContext.WalletList.Data.Where(x => x.Address == selectedWallet).FirstOrDefault();

        if (wallet == null)
            return;

        //Do we need the owner wallet?
        Wallet? ownerWallet = BindingContext.WalletList.Data.Where(x => x.Address == wallet.OwnerAddress).FirstOrDefault();

        await transactionService.SendAction(wallet, ownerWallet, AoAction);
    }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<AddWalletDialog>("Add Wallet", options);
    }

}
