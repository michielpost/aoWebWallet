@page "/transaction/{txid}"
@using aoWebWallet.Models
@inherits MvvmComponentBase<TransactionDetailViewModel>
@inject NavigationManager NavigationManager;
@inject TokenDataService dataService
@inject GatewayUrlHelper UrlHelper;

<PageTitle>@TxId - @Program.PageTitlePostFix</PageTitle>


<MudContainer Class="mt-8 px-8" MaxWidth="MaxWidth.False">

    <MudStack>
        <DataLoaderProgress DataLoader="BindingContext.SelectedTransaction.DataLoader" Title="transaction" />



        @if (BindingContext.SelectedTransaction.Data != null)
        {
            var transfer = BindingContext.SelectedTransaction.Data;

            <MudText Typo="Typo.h5">Transaction</MudText>
            <MudText Class="KodeMono tx-wrap" Typo="Typo.h6">
                @transfer.Id
            </MudText>

            var tokenData = dataService.TokenList.Where(x => x.TokenId == transfer.TokenId).Select(x => x.TokenData).FirstOrDefault();

            <MudTimeline TimelinePosition="TimelinePosition.Left">
                <MudTimelineItem>
                    <ItemDot>
                        <MudAvatar Size="Size.Medium" title="@tokenData?.TokenId"><MudImage Src="@UrlHelper.GetArweaveUrl(tokenData?.Logo)" /></MudAvatar>
                    </ItemDot>
                    <ItemContent>
                        @if (transfer.BlockHeight.HasValue)
                        {
                            <MudText Typo="Typo.caption">@transfer.Timestamp.ToString("s")</MudText>
                        }
                        else
                        {
                            <MudText Typo="Typo.caption">unconfirmed</MudText>
                        }

                        @if (tokenData != null)
                        {
                            <MudStack Justify="Justify.Center" Spacing="0">
                                <MudText Typo="Typo.body1">@tokenData.Name</MudText>
                                <MudText Typo="Typo.body2">@tokenData.Ticker</MudText>
                            </MudStack>
                        }

                        @{
                            string detailUrlFrom = $"wallet/{transfer.From}";
                            string detailUrlTo = $"wallet/{transfer.To}";
                        }

                        <MudLink Class="KodeMono tx-wrap" style="text-overflow: ellipsis; white-space: nowrap;overflow: hidden;" Href="@detailUrlFrom" Typo="Typo.h6">
                            @transfer.From
                        </MudLink>

                        <MudIcon Icon="@Icons.Material.Filled.ArrowRight" aria-label="Receive"></MudIcon>

                        <MudLink Class="KodeMono tx-wrap" style="text-overflow: ellipsis; white-space: nowrap;overflow: hidden;" Href="@detailUrlTo" Typo="Typo.h6">
                            @transfer.To
                        </MudLink>

                        @if (tokenData != null)
                        {
                            <MudText Typo="Typo.h5">@BalanceHelper.FormatBalance(transfer.Quantity, tokenData.Denomination ?? 0)</MudText>
                        }
                    </ItemContent>
                </MudTimelineItem>
            </MudTimeline>
        }

    </MudStack>
</MudContainer>


@code
{



}
